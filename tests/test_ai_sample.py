# Code generated by lark_sdk_gen. DO NOT EDIT.

from tests.test_conf import app_all_permission
import unittest
import pylark
import pytest
from tests.test_helper import mock_get_tenant_access_token_failed


class TestAISampleRequestFailed(unittest.TestCase):
    def __init__(self, *args, **kwargs):
        super(TestAISampleRequestFailed, self).__init__(*args, **kwargs)
        self.cli = app_all_permission.ins()
        self.cli.auth.get_tenant_access_token = mock_get_tenant_access_token_failed
        self.cli.auth.get_app_access_token = mock_get_tenant_access_token_failed
        self.module_cli = self.cli.ai

    def test_request_failed_recognize_basic_image(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.recognize_basic_image(pylark.RecognizeBasicImageReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_recognize_speech_stream(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.recognize_speech_stream(pylark.RecognizeSpeechStreamReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_recognize_speech_file(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.recognize_speech_file(pylark.RecognizeSpeechFileReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_translate_text(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.translate_text(pylark.TranslateTextReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_detect_text_language(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.detect_text_language(pylark.DetectTextLanguageReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_detect_face_attributes(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.detect_face_attributes(pylark.DetectFaceAttributesReq())

        assert "msg=failed" in f"{e}"
