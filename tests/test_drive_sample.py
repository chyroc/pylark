# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.log import logger
from tests.test_conf import app_all_permission
import unittest
import pylark
import pytest


class Test_Drive_Sample_RequestFailed(unittest.TestCase):
    def __init__(self):
        super().__init__()
        self.cli = app_all_permission.ins()
        # self.cli.mock().MockGetTenantAccessToken(mockGetTenantAccessTokenFailed)
        # self.cli.mock().MockGetAppAccessToken(mockGetTenantAccessTokenFailed)
        self.module_cli = self.cli.drive

    def test_request_failed_create_drive_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateDriveFile(pylark.CreateDriveFileReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_copy_drive_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CopyDriveFile(pylark.CopyDriveFileReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_drive_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteDriveFile(pylark.DeleteDriveFileReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_drive_sheet_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteDriveSheetFile(
                pylark.DeleteDriveSheetFileReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_drive_folder(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateDriveFolder(
                pylark.CreateDriveFolderReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_folder_meta(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveFolderMeta(
                pylark.GetDriveFolderMetaReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_root_folder_meta(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveRootFolderMeta(
                pylark.GetDriveRootFolderMetaReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_folder_children(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveFolderChildren(
                pylark.GetDriveFolderChildrenReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_file_statistics(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveFileStatistics(
                pylark.GetDriveFileStatisticsReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_download_drive_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DownloadDriveFile(
                pylark.DownloadDriveFileReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_upload_drive_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UploadDriveFile(pylark.UploadDriveFileReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_prepare_upload_drive_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.PrepareUploadDriveFile(
                pylark.PrepareUploadDriveFileReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_part_upload_drive_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.PartUploadDriveFile(
                pylark.PartUploadDriveFileReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_finish_upload_drive_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.FinishUploadDriveFile(
                pylark.FinishUploadDriveFileReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_download_drive_media(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DownloadDriveMedia(
                pylark.DownloadDriveMediaReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_upload_drive_media(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UploadDriveMedia(
                pylark.UploadDriveMediaReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_prepare_upload_drive_media(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.PrepareUploadDriveMedia(
                pylark.PrepareUploadDriveMediaReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_part_upload_drive_media(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.PartUploadDriveMedia(
                pylark.PartUploadDriveMediaReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_finish_upload_drive_media(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.FinishUploadDriveMedia(
                pylark.FinishUploadDriveMediaReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_drive_member_permission_old(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateDriveMemberPermissionOld(
                pylark.CreateDriveMemberPermissionOldReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_transfer_drive_member_permission(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.TransferDriveMemberPermission(
                pylark.TransferDriveMemberPermissionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_member_permission_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveMemberPermissionList(
                pylark.GetDriveMemberPermissionListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_drive_member_permission(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateDriveMemberPermission(
                pylark.CreateDriveMemberPermissionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_drive_member_permission(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteDriveMemberPermission(
                pylark.DeleteDriveMemberPermissionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_drive_member_permission(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateDriveMemberPermission(
                pylark.UpdateDriveMemberPermissionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_check_drive_member_permission(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CheckDriveMemberPermission(
                pylark.CheckDriveMemberPermissionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_drive_public_permission_v1_old(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateDrivePublicPermissionV1Old(
                pylark.UpdateDrivePublicPermissionV1OldReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_drive_public_permission_v2_old(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateDrivePublicPermissionV2Old(
                pylark.UpdateDrivePublicPermissionV2OldReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_public_permission_v2(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDrivePublicPermissionV2(
                pylark.GetDrivePublicPermissionV2Req()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_drive_public_permission(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateDrivePublicPermission(
                pylark.UpdateDrivePublicPermissionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_batch_get_drive_media_tmp_download_url(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.BatchGetDriveMediaTmpDownloadURL(
                pylark.BatchGetDriveMediaTmpDownloadURLReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_comment_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveCommentList(
                pylark.GetDriveCommentListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_comment(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveComment(pylark.GetDriveCommentReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_drive_comment(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateDriveComment(
                pylark.CreateDriveCommentReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_drive_comment(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateDriveComment(
                pylark.UpdateDriveCommentReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_drive_comment(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteDriveComment(
                pylark.DeleteDriveCommentReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_drive_comment_patch(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateDriveCommentPatch(
                pylark.UpdateDriveCommentPatchReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_drive_doc(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateDriveDoc(pylark.CreateDriveDocReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_doc_content(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveDocContent(
                pylark.GetDriveDocContentReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_doc_raw_content(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveDocRawContent(
                pylark.GetDriveDocRawContentReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_doc_meta(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveDocMeta(pylark.GetDriveDocMetaReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_sheet(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateSheet(pylark.CreateSheetReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_meta(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetMeta(pylark.GetSheetMetaReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_property(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetProperty(
                pylark.UpdateSheetPropertyReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_batch_update_sheet(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.BatchUpdateSheet(
                pylark.BatchUpdateSheetReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_import_sheet(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.ImportSheet(pylark.ImportSheetReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_drive_import_task(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateDriveImportTask(
                pylark.CreateDriveImportTaskReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_drive_import_task(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetDriveImportTask(
                pylark.GetDriveImportTaskReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_move_sheet_dimension(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.MoveSheetDimension(
                pylark.MoveSheetDimensionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_prepend_sheet_value(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.PrependSheetValue(
                pylark.PrependSheetValueReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_append_sheet_value(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.AppendSheetValue(
                pylark.AppendSheetValueReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_insert_sheet_dimension_range(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.InsertSheetDimensionRange(
                pylark.InsertSheetDimensionRangeReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_add_sheet_dimension_range(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.AddSheetDimensionRange(
                pylark.AddSheetDimensionRangeReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_dimension_range(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetDimensionRange(
                pylark.UpdateSheetDimensionRangeReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_sheet_dimension_range(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteSheetDimensionRange(
                pylark.DeleteSheetDimensionRangeReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_value(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetValue(pylark.GetSheetValueReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_batch_get_sheet_value(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.BatchGetSheetValue(
                pylark.BatchGetSheetValueReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_set_sheet_value(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SetSheetValue(pylark.SetSheetValueReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_batch_set_sheet_value(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.BatchSetSheetValue(
                pylark.BatchSetSheetValueReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_set_sheet_style(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SetSheetStyle(pylark.SetSheetStyleReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_batch_set_sheet_style(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.BatchSetSheetStyle(
                pylark.BatchSetSheetStyleReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_merge_sheet_cell(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.MergeSheetCell(pylark.MergeSheetCellReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_unmerge_sheet_cell(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UnmergeSheetCell(
                pylark.UnmergeSheetCellReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_set_sheet_value_image(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SetSheetValueImage(
                pylark.SetSheetValueImageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_find_sheet(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.FindSheet(pylark.FindSheetReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_replace_sheet(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.ReplaceSheet(pylark.ReplaceSheetReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_sheet_condition_format(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateSheetConditionFormat(
                pylark.CreateSheetConditionFormatReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_condition_format(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetConditionFormat(
                pylark.GetSheetConditionFormatReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_condition_format(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetConditionFormat(
                pylark.UpdateSheetConditionFormatReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_sheet_condition_format(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteSheetConditionFormat(
                pylark.DeleteSheetConditionFormatReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_sheet_protected_dimension(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateSheetProtectedDimension(
                pylark.CreateSheetProtectedDimensionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_protected_dimension(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetProtectedDimension(
                pylark.GetSheetProtectedDimensionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_protected_dimension(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetProtectedDimension(
                pylark.UpdateSheetProtectedDimensionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_sheet_protected_dimension(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteSheetProtectedDimension(
                pylark.DeleteSheetProtectedDimensionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_sheet_data_validation_dropdown(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateSheetDataValidationDropdown(
                pylark.CreateSheetDataValidationDropdownReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_sheet_data_validation_dropdown(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteSheetDataValidationDropdown(
                pylark.DeleteSheetDataValidationDropdownReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_data_validation_dropdown(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetDataValidationDropdown(
                pylark.UpdateSheetDataValidationDropdownReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_data_validation_dropdown(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetDataValidationDropdown(
                pylark.GetSheetDataValidationDropdownReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_sheet_filter(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateSheetFilter(
                pylark.CreateSheetFilterReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_sheet_filter(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteSheetFilter(
                pylark.DeleteSheetFilterReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_filter(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetFilter(
                pylark.UpdateSheetFilterReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_filter(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetFilter(pylark.GetSheetFilterReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_sheet_filter_view(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateSheetFilterView(
                pylark.CreateSheetFilterViewReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_sheet_filter_view(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteSheetFilterView(
                pylark.DeleteSheetFilterViewReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_filter_view(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetFilterView(
                pylark.UpdateSheetFilterViewReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_filter_view(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetFilterView(
                pylark.GetSheetFilterViewReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_query_sheet_filter_view(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.QuerySheetFilterView(
                pylark.QuerySheetFilterViewReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_sheet_filter_view_condition(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateSheetFilterViewCondition(
                pylark.CreateSheetFilterViewConditionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_sheet_filter_view_condition(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteSheetFilterViewCondition(
                pylark.DeleteSheetFilterViewConditionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_filter_view_condition(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetFilterViewCondition(
                pylark.UpdateSheetFilterViewConditionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_filter_view_condition(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetFilterViewCondition(
                pylark.GetSheetFilterViewConditionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_query_sheet_filter_view_condition(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.QuerySheetFilterViewCondition(
                pylark.QuerySheetFilterViewConditionReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_sheet_float_image(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateSheetFloatImage(
                pylark.CreateSheetFloatImageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_delete_sheet_float_image(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DeleteSheetFloatImage(
                pylark.DeleteSheetFloatImageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_sheet_float_image(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateSheetFloatImage(
                pylark.UpdateSheetFloatImageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_sheet_float_image(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetSheetFloatImage(
                pylark.GetSheetFloatImageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_query_sheet_float_image(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.QuerySheetFloatImage(
                pylark.QuerySheetFloatImageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")
