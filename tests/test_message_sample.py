# Code generated by lark_sdk_gen. DO NOT EDIT.

from tests.test_conf import app_all_permission
import unittest
import pylark
import pytest
from tests.test_helper import mock_get_tenant_access_token_failed


class TestMessageSampleRequestFailed(unittest.TestCase):
    def __init__(self, *args, **kwargs):
        super(TestMessageSampleRequestFailed, self).__init__(*args, **kwargs)
        self.cli = app_all_permission.ins()
        self.cli.auth.get_tenant_access_token = mock_get_tenant_access_token_failed
        self.cli.auth.get_app_access_token = mock_get_tenant_access_token_failed
        self.module_cli = self.cli.message

    def test_request_failed_send_raw_message(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.send_raw_message(pylark.SendRawMessageReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_send_raw_message_old(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.send_raw_message_old(pylark.SendRawMessageOldReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_reply_raw_message(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.reply_raw_message(pylark.ReplyRawMessageReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_delete_message(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.delete_message(pylark.DeleteMessageReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_update_message(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.update_message(pylark.UpdateMessageReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_get_message_read_user_list(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.get_message_read_user_list(
                pylark.GetMessageReadUserListReq()
            )

        assert "msg=failed" in f"{e}"

    def test_request_failed_get_message_list(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.get_message_list(pylark.GetMessageListReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_get_message_file(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.get_message_file(pylark.GetMessageFileReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_get_message(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.get_message(pylark.GetMessageReq())

        assert "msg=failed" in f"{e}"

    def test_request_failed_delete_ephemeral_message(self):
        with pytest.raises(pylark.PyLarkError) as e:
            self.module_cli.delete_ephemeral_message(pylark.DeleteEphemeralMessageReq())

        assert "msg=failed" in f"{e}"
