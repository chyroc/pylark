# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.log import logger
from tests.test_conf import app_all_permission
import unittest
import pylark
import pytest


class Test_ACS_Sample_RequestFailed(unittest.TestCase):
    def __init__(self):
        super().__init__()
        self.cli = app_all_permission.ins()
        # self.cli.mock().MockGetTenantAccessToken(mockGetTenantAccessTokenFailed)
        # self.cli.mock().MockGetAppAccessToken(mockGetTenantAccessTokenFailed)
        self.module_cli = self.cli.acs

    def test_request_failed_get_acs_access_record_photo(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetACSAccessRecordPhoto(
                pylark.GetACSAccessRecordPhotoReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_acs_access_record_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetACSAccessRecordList(
                pylark.GetACSAccessRecordListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_acs_device_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetACSDeviceList(
                pylark.GetACSDeviceListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_acs_user_face(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetACSUserFace(pylark.GetACSUserFaceReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_acs_user_face(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateACSUserFace(
                pylark.UpdateACSUserFaceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_acs_user(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetACSUser(pylark.GetACSUserReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_acs_user(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateACSUser(pylark.UpdateACSUserReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_acs_user_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetACSUserList(pylark.GetACSUserListReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")
