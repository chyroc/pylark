# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.log import logger
from tests.test_conf import app_all_permission
import unittest
import pylark
import pytest


class Test_Application_Sample_RequestFailed(unittest.TestCase):
    def __init__(self):
        super().__init__()
        self.cli = app_all_permission.ins()
        # self.cli.mock().MockGetTenantAccessToken(mockGetTenantAccessTokenFailed)
        # self.cli.mock().MockGetAppAccessToken(mockGetTenantAccessTokenFailed)
        self.module_cli = self.cli.application

    def test_request_failed_is_application_user_admin(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.IsApplicationUserAdmin(
                pylark.IsApplicationUserAdminReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_user_admin_scope(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationUserAdminScope(
                pylark.GetApplicationUserAdminScopeReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_app_visibility(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationAppVisibility(
                pylark.GetApplicationAppVisibilityReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_user_visible_app(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationUserVisibleApp(
                pylark.GetApplicationUserVisibleAppReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_app_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationAppList(
                pylark.GetApplicationAppListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_update_application_app_visibility(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UpdateApplicationAppVisibility(
                pylark.UpdateApplicationAppVisibilityReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_app_admin_user_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationAppAdminUserList(
                pylark.GetApplicationAppAdminUserListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_check_user_is_in_application_paid_scope(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CheckUserIsInApplicationPaidScope(
                pylark.CheckUserIsInApplicationPaidScopeReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_order_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationOrderList(
                pylark.GetApplicationOrderListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_order(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationOrder(
                pylark.GetApplicationOrderReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_usage_overview(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationUsageOverview(
                pylark.GetApplicationUsageOverviewReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_usage_trend(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationUsageTrend(
                pylark.GetApplicationUsageTrendReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_usage_detail(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationUsageDetail(
                pylark.GetApplicationUsageDetailReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_message_overview(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationMessageOverview(
                pylark.GetApplicationMessageOverviewReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_message_trend(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationMessageTrend(
                pylark.GetApplicationMessageTrendReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_application_message_detail(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApplicationMessageDetail(
                pylark.GetApplicationMessageDetailReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")
