# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.log import logger
from tests.test_conf import app_all_permission
import unittest
import pylark
import pytest


class Test_VC_Sample_RequestFailed(unittest.TestCase):
    def __init__(self):
        super().__init__()
        self.cli = app_all_permission.ins()
        # self.cli.mock().MockGetTenantAccessToken(mockGetTenantAccessTokenFailed)
        # self.cli.mock().MockGetAppAccessToken(mockGetTenantAccessTokenFailed)
        self.module_cli = self.cli.vc

    def test_request_failed_get_vc_meeting(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetVCMeeting(pylark.GetVCMeetingReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_set_vc_host_meeting(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SetVCHostMeeting(
                pylark.SetVCHostMeetingReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_vc_daily_report(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetVCDailyReport(
                pylark.GetVCDailyReportReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_vc_top_user_report(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetVCTopUserReport(
                pylark.GetVCTopUserReportReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_vc_room_config(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetVCRoomConfig(pylark.GetVCRoomConfigReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_set_vc_room_config(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SetVCRoomConfig(pylark.SetVCRoomConfigReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")
