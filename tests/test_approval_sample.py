# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.log import logger
from tests.test_conf import app_all_permission
import unittest
import pylark
import pytest


class Test_Approval_Sample_RequestFailed(unittest.TestCase):
    def __init__(self):
        super().__init__()
        self.cli = app_all_permission.ins()
        # self.cli.mock().MockGetTenantAccessToken(mockGetTenantAccessTokenFailed)
        # self.cli.mock().MockGetAppAccessToken(mockGetTenantAccessTokenFailed)
        self.module_cli = self.cli.approval

    def test_request_failed_get_approval(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApproval(pylark.GetApprovalReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_approval_instance_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApprovalInstanceList(
                pylark.GetApprovalInstanceListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_approval_instance(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetApprovalInstance(
                pylark.GetApprovalInstanceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_approval_instance(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateApprovalInstance(
                pylark.CreateApprovalInstanceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_approve_approval_instance(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.ApproveApprovalInstance(
                pylark.ApproveApprovalInstanceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_reject_approval_instance(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.RejectApprovalInstance(
                pylark.RejectApprovalInstanceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_transfer_approval_instance(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.TransferApprovalInstance(
                pylark.TransferApprovalInstanceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_cancel_approval_instance(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CancelApprovalInstance(
                pylark.CancelApprovalInstanceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_upload_approval_file(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UploadApprovalFile(
                pylark.UploadApprovalFileReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_search_approval_instance(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SearchApprovalInstance(
                pylark.SearchApprovalInstanceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_create_approval_carbon_copy(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.CreateApprovalCarbonCopy(
                pylark.CreateApprovalCarbonCopyReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")
