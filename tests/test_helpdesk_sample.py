# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.log import logger
from tests.test_conf import app_all_permission
import unittest
import pylark
import pytest


class Test_Helpdesk_Sample_RequestFailed(unittest.TestCase):
    def __init__(self):
        super().__init__()
        self.cli = app_all_permission.ins()
        # self.cli.mock().MockGetTenantAccessToken(mockGetTenantAccessTokenFailed)
        # self.cli.mock().MockGetAppAccessToken(mockGetTenantAccessTokenFailed)
        self.module_cli = self.cli.helpdesk

    def test_request_failed_start_helpdesk_service(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.StartHelpdeskService(
                pylark.StartHelpdeskServiceReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_ticket(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskTicket(
                pylark.GetHelpdeskTicketReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_ticket_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskTicketList(
                pylark.GetHelpdeskTicketListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_download_helpdesk_ticket_image(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.DownloadHelpdeskTicketImage(
                pylark.DownloadHelpdeskTicketImageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_answer_helpdesk_ticket_user_query(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.AnswerHelpdeskTicketUserQuery(
                pylark.AnswerHelpdeskTicketUserQueryReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_ticket_message_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskTicketMessageList(
                pylark.GetHelpdeskTicketMessageListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_send_helpdesk_ticket_message(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SendHelpdeskTicketMessage(
                pylark.SendHelpdeskTicketMessageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_ticket_customized_field_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskTicketCustomizedFieldList(
                pylark.GetHelpdeskTicketCustomizedFieldListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_ticket_customized_field(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskTicketCustomizedField(
                pylark.GetHelpdeskTicketCustomizedFieldReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_category(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskCategory(
                pylark.GetHelpdeskCategoryReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_category_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskCategoryList(
                pylark.GetHelpdeskCategoryListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_faq(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskFAQ(pylark.GetHelpdeskFAQReq())
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_faq_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskFAQList(
                pylark.GetHelpdeskFAQListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_faq_image(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskFAQImage(
                pylark.GetHelpdeskFAQImageReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_search_helpdesk_faq(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SearchHelpdeskFAQ(
                pylark.SearchHelpdeskFAQReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_agent_email(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskAgentEmail(
                pylark.GetHelpdeskAgentEmailReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_agent_schedule(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskAgentSchedule(
                pylark.GetHelpdeskAgentScheduleReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_agent_schedule_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskAgentScheduleList(
                pylark.GetHelpdeskAgentScheduleListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_agent_skill(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskAgentSkill(
                pylark.GetHelpdeskAgentSkillReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_agent_skill_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskAgentSkillList(
                pylark.GetHelpdeskAgentSkillListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_get_helpdesk_agent_skill_rule_list(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.GetHelpdeskAgentSkillRuleList(
                pylark.GetHelpdeskAgentSkillRuleListReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_subscribe_helpdesk_event(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.SubscribeHelpdeskEvent(
                pylark.SubscribeHelpdeskEventReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")

    def test_request_failed_unsubscribe_helpdesk_event(self):
        with pytest.raises(ZeroDivisionError) as e:
            res, response = self.module_cli.UnsubscribeHelpdeskEvent(
                pylark.UnsubscribeHelpdeskEventReq()
            )
            print("e", e)

            # as.NotNil(err)
            # as.Equal(err.Error(), "failed")
