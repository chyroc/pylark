# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.lark_request import RawRequestReq, _new_method_option
import attr
import typing
import io


@attr.s
class DeleteBitableFieldReq(object):
    app_token: str = attr.ib(
        default="", metadata={"req_type": "path", "key": "app_token"}
    )  # bitable app token, 示例值："appbcbWCzen6D8dezhoCH2RpMAh"
    table_id: str = attr.ib(
        default="", metadata={"req_type": "path", "key": "table_id"}
    )  # table id, 示例值："tblsRc9GRRXKqhvW"
    field_id: str = attr.ib(
        default="", metadata={"req_type": "path", "key": "field_id"}
    )  # field id, 示例值："fldPTb0U2y"


@attr.s
class DeleteBitableFieldResp(object):
    field_id: str = attr.ib(
        default="", metadata={"req_type": "json", "key": "field_id"}
    )  # field id
    deleted: bool = attr.ib(
        factory=lambda: bool(), metadata={"req_type": "json", "key": "deleted"}
    )  # 删除标记


def _gen_delete_bitable_field_req(request, options) -> RawRequestReq:
    return RawRequestReq(
        dataclass=DeleteBitableFieldResp,
        scope="Bitable",
        api="DeleteBitableField",
        method="DELETE",
        url="https://open.feishu.cn/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields/:field_id",
        body=request,
        method_option=_new_method_option(options),
        need_tenant_access_token=True,
        need_user_access_token=True,
    )
