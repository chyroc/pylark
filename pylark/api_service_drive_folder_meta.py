# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.lark_request import RawRequestReq, _new_method_option
import attr
import typing
import io


@attr.s
class GetDriveFolderMetaReq(object):
    folder_token: str = attr.ib(
        default="", metadata={"req_type": "path"}
    )  # 文件夹 token，获取方式见[概述](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/files/guide/introduction)


@attr.s
class GetDriveFolderMetaResp(object):
    id: str = attr.ib(default="", metadata={"req_type": "json"})  # 文件夹的 id
    name: str = attr.ib(default="", metadata={"req_type": "json"})  # 文件夹的标题
    token: str = attr.ib(default="", metadata={"req_type": "json"})  # 文件夹的 token
    create_uid: str = attr.ib(default="", metadata={"req_type": "json"})  # 文件夹的创建者 id
    edit_uid: str = attr.ib(default="", metadata={"req_type": "json"})  # 文件夹的最后编辑者 id
    parent_id: str = attr.ib(default="", metadata={"req_type": "json"})  # 文件夹的上级目录 id
    own_uid: str = attr.ib(
        default="", metadata={"req_type": "json"}
    )  # 文件夹为个人文件夹时，为文件夹的所有者 id；文件夹为共享文件夹时，为文件夹树id


def _gen_get_drive_folder_meta_req(request, options) -> RawRequestReq:
    return RawRequestReq(
        dataclass=GetDriveFolderMetaResp,
        scope="Drive",
        api="GetDriveFolderMeta",
        method="GET",
        url="https://open.feishu.cn/open-apis/drive/explorer/v2/folder/:folderToken/meta",
        body=request,
        method_option=_new_method_option(options),
        need_tenant_access_token=True,
        need_user_access_token=True,
    )
