# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.lark_request import RawRequestReq, _new_method_option
import attr
import typing
import io


@attr.s
class IsApplicationUserAdminReq(object):
    open_id: str = attr.ib(
        default="", metadata={"req_type": "query"}
    )  # 用户 open_id，open_id 和 employee_id 两个参数必须包含其一，若同时传入取 open_id
    employee_id: str = attr.ib(
        default="", metadata={"req_type": "query"}
    )  # 用户 employee_id（同通讯录 v3 版本中的 user_id），open_id 和 employee_id 两个参数必须包含其一，若同时传入取 open_id


@attr.s
class IsApplicationUserAdminResp(object):
    is_app_admin: bool = attr.ib(
        factory=lambda: bool(), metadata={"req_type": "json"}
    )  # 用户是否为管理员，true 为是，false 为否


def _gen_is_application_user_admin_req(request, options) -> RawRequestReq:
    return RawRequestReq(
        dataclass=IsApplicationUserAdminResp,
        scope="Application",
        api="IsApplicationUserAdmin",
        method="GET",
        url="https://open.feishu.cn/open-apis/application/v3/is_user_admin",
        body=request,
        method_option=_new_method_option(options),
        need_tenant_access_token=True,
    )
