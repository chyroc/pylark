# Code generated by lark_sdk_gen. DO NOT EDIT.

from pylark.lark_request import RawRequestReq, _new_method_option
import attr
import typing
import io


@attr.s
class GetFaceVerifyAuthResultReq(object):
    req_order_no: str = attr.ib(
        default="", metadata={"req_type": "query"}
    )  # 人脸识别单次唯一标识，由`tt.startFaceVerify`接口返回
    open_id: str = attr.ib(
        default="", metadata={"req_type": "query"}
    )  # 用户应用标识, 与employee_id二选其一
    employee_id: str = attr.ib(
        default="", metadata={"req_type": "query"}
    )  # 用户租户标识, 与open_id二选其一


@attr.s
class GetFaceVerifyAuthResultResp(object):
    auth_state: int = attr.ib(
        default=0, metadata={"req_type": "json"}
    )  # 认证结果, 0: 认证中, 1: 认证成功, -1: 认证失败
    auth_timpstamp: int = attr.ib(
        default=0, metadata={"req_type": "json"}
    )  # 认证时间，unix 时间戳


def _gen_get_face_verify_auth_result_req(request, options) -> RawRequestReq:
    return RawRequestReq(
        dataclass=GetFaceVerifyAuthResultResp,
        scope="HumanAuth",
        api="GetFaceVerifyAuthResult",
        method="GET",
        url="https://open.feishu.cn/open-apis/face_verify/v1/query_auth_result",
        body=request,
        method_option=_new_method_option(options),
        need_tenant_access_token=True,
    )
