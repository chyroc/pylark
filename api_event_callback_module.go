// Code generated by lark_sdk_gen. DO NOT EDIT.

package lark

import (
	"context"
    "encoding/json"
	"fmt"
)

type EventType string

const (
	
)

type eventHandler struct {
	
}

func (r *eventHandler) clone() *eventHandler {
	return &eventHandler{
		
	}
}

type eventBody struct {
	
}

func (r *EventCallbackService) parserEventV2(req *eventReq) error {
	if req.Header == nil {
		return fmt.Errorf("get schema=2.0, but header is nil")
	}

	switch req.Header.EventType {
	
	}

	return nil
}

// https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/bot-events
func (r *EventCallbackService) parserEventV1(req *eventReq) error {
	if req.UUID == "" {
		return fmt.Errorf("get schema=1.0, but uuid is nil")
	}

	bs, err := json.Marshal(req.Event)
	if err != nil {
		return err
	}

	v1type := new(v1type)
	if err = json.Unmarshal(bs, v1type); err != nil {
		return err
	}

	switch v1type.Type {
	
	}

	return nil
}

type v1type struct {
	Type EventType `json:"type"`
}

func (r *EventCallbackService) handlerEvent(ctx context.Context, req *eventReq) (handled bool, s string, err error) {
	switch {
	
	}
	return false, "", nil
}
